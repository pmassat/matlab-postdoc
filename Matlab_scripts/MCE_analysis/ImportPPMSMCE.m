function [S] = ImportPPMSMCE(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [TEMPERATUREK,AVGTEMPERATUREK,SIGMATEMPERATUREK,MAGNETICFIELDOE,AVGMAGNETICFIELDOE,SIGMAMAGNETICFIELDOE,SAMPLEPOSITIONDEG,AVGSAMPLEPOSITIONDEG,SIGMASAMPLEPOSITIONDEG,BRIDGE1RESISTANCEOHMS,AVGBRIDGE1RESISTANCEOHMS,SIGMABRIDGE1RESISTANCEOHMS,BRIDGE1EXCITATIONUA,AVGBRIDGE1EXCITATIONUA,SIGMABRIDGE1EXCITATIONUA,BRIDGE2RESISTANCEOHMS,AVGBRIDGE2RESISTANCEOHMS,SIGMABRIDGE2RESISTANCEOHMS,BRIDGE2EXCITATIONUA]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [TEMPERATUREK,AVGTEMPERATUREK,SIGMATEMPERATUREK,MAGNETICFIELDOE,AVGMAGNETICFIELDOE,SIGMAMAGNETICFIELDOE,SAMPLEPOSITIONDEG,AVGSAMPLEPOSITIONDEG,SIGMASAMPLEPOSITIONDEG,BRIDGE1RESISTANCEOHMS,AVGBRIDGE1RESISTANCEOHMS,SIGMABRIDGE1RESISTANCEOHMS,BRIDGE1EXCITATIONUA,AVGBRIDGE1EXCITATIONUA,SIGMABRIDGE1EXCITATIONUA,BRIDGE2RESISTANCEOHMS,AVGBRIDGE2RESISTANCEOHMS,SIGMABRIDGE2RESISTANCEOHMS,BRIDGE2EXCITATIONUA]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [TemperatureK,AvgTemperatureK,SigmaTemperatureK,MagneticFieldOe,AvgMagneticFieldOe,SigmaMagneticFieldOe,SamplePositiondeg,AvgSamplePositiondeg,SigmaSamplePositiondeg,Bridge1Resistanceohms,AvgBridge1Resistanceohms,SigmaBridge1Resistanceohms,Bridge1ExcitationuA,AvgBridge1ExcitationuA,SigmaBridge1ExcitationuA,Bridge2Resistanceohms,AvgBridge2Resistanceohms,SigmaBridge2Resistanceohms,Bridge2ExcitationuA]
%   = importfile('LogPPMSMCE_4_15-OePerSec.dat',20, 79558);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2017/07/20 23:36:42

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 20;
    endRow = inf;
end

%% Format string for each line of text:
%   column8: double (%f)
%	column9: text (%s)
%   column10: text (%s)
%	column11: double (%f)
%   column12: text (%s)
%	column13: text (%s)
%   column14: double (%f)
%	column15: text (%s)
%   column16: text (%s)
%	column17: text (%s)
%   column18: text (%s)
%	column19: text (%s)
%   column20: text (%s)
%	column21: text (%s)
%   column22: text (%s)
%	column23: double (%f)
%   column24: text (%s)
%	column25: text (%s)
%   column26: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%*s%*s%*s%*s%*s%*s%f%s%s%f%s%s%f%s%s%s%s%s%s%s%s%f%s%s%f%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
S.TPuck = dataArray{:, 1};
S.H = dataArray{:, 4};
S.RPlatform = dataArray{:, 16};


