function S = importTmVO4Magnetization(filename, startRow, endRow)
%IMPORTTMVO4MAGNETIZATION Import numeric data from a text file as column vectors.
%   [COMMENT,TIMESTAMPSEC,TEMPERATUREK,MAGNETICFIELDOE,MOMENTEMU,MSTDERREMU,TRANSPORTACTION,AVERAGINGTIMESEC,FREQUENCYHZ,PEAKAMPLITUDEMM,CENTERPOSITIONMM,LOCKINSIGNALV,LOCKINSIGNALV1,RANGE,MQUADSIGNALEMU,ACMOMENTEMU,ACMSTDERREMU,ACPHASEDEG,ACPHASESTDERRDEG,ACSUSCEPTIBILITYEMUOE,ACSUSCEPTSTDERREMUOE,ACXEMUOE,ACXSTDERREMUOE,ACXEMUOE1,ACXSTDERREMUOE1,ACDRIVEOE,ACFREQUENCYHZ,ACAVERAGINGTIMESEC,ACCYCLES,ACRANGE,ACMEASURETYPE,ACSIGNALV,ACSIGNALV1,ACTRIMCOILRATIO,ACTRIMCOILPHASE,MINTEMPERATUREK,MAXTEMPERATUREK,MINFIELDOE,MAXFIELDOE,MASSGRAMS,MOTORLAGDEG,PRESSURETORR,MEASURECOUNT,MEASUREMENTNUMBER,SQUIDSTATUSCODE,MOTORSTATUSCODE,MEASURESTATUSCODE,MOTORCURRENTAMPS,MOTORTEMPC,TEMPSTATUSCODE,FIELDSTATUSCODE,CHAMBERSTATUSCODE,CHAMBERTEMPK,REDIRECTIONSTATE,EVERCOOLSTATUS,AVERAGETEMPK,ROTATIONANGLEDEG,ROTATORSTATE,DCMOMENTFIXEDCTREMU,DCMOMENTERRFIXEDCTREMU,DCMOMENTFREECTREMU,DCMOMENTERRFREECTREMU,DCFIXEDFIT,DCFREEFIT,DCCALCULATEDCENTERMM,DCCALCULATEDCENTERERRMM,DCSCANLENGTHMM,DCSCANTIMES,DCNUMBEROFPOINTS,DCSQUIDDRIFT,DCMINVV,DCMAXVV,DCSCANSPERMEASURE,MAP01,MAP02,MAP03,MAP04,MAP05,MAP06,MAP07,MAP08,MAP09,MAP10,MAP11,MAP12,MAP13,MAP14,MAP15,MAP16]
%   = IMPORTTMVO4MAGNETIZATION(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [COMMENT,TIMESTAMPSEC,TEMPERATUREK,MAGNETICFIELDOE,MOMENTEMU,MSTDERREMU,TRANSPORTACTION,AVERAGINGTIMESEC,FREQUENCYHZ,PEAKAMPLITUDEMM,CENTERPOSITIONMM,LOCKINSIGNALV,LOCKINSIGNALV1,RANGE,MQUADSIGNALEMU,ACMOMENTEMU,ACMSTDERREMU,ACPHASEDEG,ACPHASESTDERRDEG,ACSUSCEPTIBILITYEMUOE,ACSUSCEPTSTDERREMUOE,ACXEMUOE,ACXSTDERREMUOE,ACXEMUOE1,ACXSTDERREMUOE1,ACDRIVEOE,ACFREQUENCYHZ,ACAVERAGINGTIMESEC,ACCYCLES,ACRANGE,ACMEASURETYPE,ACSIGNALV,ACSIGNALV1,ACTRIMCOILRATIO,ACTRIMCOILPHASE,MINTEMPERATUREK,MAXTEMPERATUREK,MINFIELDOE,MAXFIELDOE,MASSGRAMS,MOTORLAGDEG,PRESSURETORR,MEASURECOUNT,MEASUREMENTNUMBER,SQUIDSTATUSCODE,MOTORSTATUSCODE,MEASURESTATUSCODE,MOTORCURRENTAMPS,MOTORTEMPC,TEMPSTATUSCODE,FIELDSTATUSCODE,CHAMBERSTATUSCODE,CHAMBERTEMPK,REDIRECTIONSTATE,EVERCOOLSTATUS,AVERAGETEMPK,ROTATIONANGLEDEG,ROTATORSTATE,DCMOMENTFIXEDCTREMU,DCMOMENTERRFIXEDCTREMU,DCMOMENTFREECTREMU,DCMOMENTERRFREECTREMU,DCFIXEDFIT,DCFREEFIT,DCCALCULATEDCENTERMM,DCCALCULATEDCENTERERRMM,DCSCANLENGTHMM,DCSCANTIMES,DCNUMBEROFPOINTS,DCSQUIDDRIFT,DCMINVV,DCMAXVV,DCSCANSPERMEASURE,MAP01,MAP02,MAP03,MAP04,MAP05,MAP06,MAP07,MAP08,MAP09,MAP10,MAP11,MAP12,MAP13,MAP14,MAP15,MAP16]
%   = IMPORTTMVO4MAGNETIZATION(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [Comment,TimeStampsec,TemperatureK,MagneticFieldOe,Momentemu,MStdErremu,TransportAction,AveragingTimesec,FrequencyHz,PeakAmplitudemm,CenterPositionmm,LockinSignalV,LockinSignalV1,Range,MQuadSignalemu,ACMomentemu,ACMStdErremu,ACPhasedeg,ACPhaseStdErrdeg,ACSusceptibilityemuOe,ACSusceptStdErremuOe,ACXemuOe,ACXStdErremuOe,ACXemuOe1,ACXStdErremuOe1,ACDriveOe,ACFrequencyHz,ACAveragingTimesec,ACCycles,ACRange,ACMeasureType,ACSignalV,ACSignalV1,ACTrimCoilRatio,ACTrimCoilPhase,MinTemperatureK,MaxTemperatureK,MinFieldOe,MaxFieldOe,Massgrams,MotorLagdeg,PressureTorr,MeasureCount,MeasurementNumber,SQUIDStatuscode,MotorStatuscode,MeasureStatuscode,MotorCurrentamps,MotorTempC,TempStatuscode,FieldStatuscode,ChamberStatuscode,ChamberTempK,RedirectionState,EvercoolStatus,AverageTempK,RotationAngledeg,Rotatorstate,DCMomentFixedCtremu,DCMomentErrFixedCtremu,DCMomentFreeCtremu,DCMomentErrFreeCtremu,DCFixedFit,DCFreeFit,DCCalculatedCentermm,DCCalculatedCenterErrmm,DCScanLengthmm,DCScanTimes,DCNumberofPoints,DCSquidDrift,DCMinVV,DCMaxVV,DCScansperMeasure,Map01,Map02,Map03,Map04,Map05,Map06,Map07,Map08,Map09,Map10,Map11,Map12,Map13,Map14,Map15,Map16] = importfile('2018-03-05_PM_TmVO4-LS5228-MP3-Plt_ZFC.dat',29, 3349);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/03/05 18:38:02

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 29;
    endRow = inf;
end

%% Format for each line of text:
%   column1: categorical (%C)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: text (%s)
%   column23: text (%s)
%	column24: text (%s)
%   column25: text (%s)
%	column26: text (%s)
%   column27: text (%s)
%	column28: text (%s)
%   column29: text (%s)
%	column30: text (%s)
%   column31: text (%s)
%	column32: text (%s)
%   column33: text (%s)
%	column34: text (%s)
%   column35: text (%s)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
%   column43: double (%f)
%	column44: double (%f)
%   column45: double (%f)
%	column46: double (%f)
%   column47: double (%f)
%	column48: double (%f)
%   column49: double (%f)
%	column50: double (%f)
%   column51: double (%f)
%	column52: double (%f)
%   column53: double (%f)
%	column54: double (%f)
%   column55: double (%f)
%	column56: double (%f)
%   column57: text (%s)
%	column58: text (%s)
%   column59: text (%s)
%	column60: text (%s)
%   column61: text (%s)
%	column62: text (%s)
%   column63: text (%s)
%	column64: text (%s)
%   column65: text (%s)
%	column66: text (%s)
%   column67: text (%s)
%	column68: text (%s)
%   column69: text (%s)
%	column70: text (%s)
%   column71: text (%s)
%	column72: text (%s)
%   column73: text (%s)
%	column74: double (%f)
%   column75: double (%f)
%	column76: double (%f)
%   column77: double (%f)
%	column78: double (%f)
%   column79: double (%f)
%	column80: double (%f)
%   column81: double (%f)
%	column82: double (%f)
%   column83: double (%f)
%	column84: double (%f)
%   column85: double (%f)
%	column86: double (%f)
%   column87: double (%f)
%	column88: double (%f)
%   column89: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%C%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%s%s%s%s%s%s%s%s%s%s%s%s%s%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
S.Comment = dataArray{:, 1};
S.TimeStampsec = dataArray{:, 2};
S.TemperatureK = dataArray{:, 3};
S.MagneticFieldOe = dataArray{:, 4};
S.Momentemu = dataArray{:, 5};
S.MStdErremu = dataArray{:, 6};
S.TransportAction = dataArray{:, 7};
S.AveragingTimesec = dataArray{:, 8};
S.FrequencyHz = dataArray{:, 9};
S.PeakAmplitudemm = dataArray{:, 10};
S.CenterPositionmm = dataArray{:, 11};
S.LockinSignalV = dataArray{:, 12};
S.LockinSignalV1 = dataArray{:, 13};
S.Range = dataArray{:, 14};
S.MQuadSignalemu = dataArray{:, 15};
S.ACMomentemu = dataArray{:, 16};
S.ACMStdErremu = dataArray{:, 17};
S.ACPhasedeg = dataArray{:, 18};
S.ACPhaseStdErrdeg = dataArray{:, 19};
S.ACSusceptibilityemuOe = dataArray{:, 20};
S.ACSusceptStdErremuOe = dataArray{:, 21};
S.ACXemuOe = dataArray{:, 22};
S.ACXStdErremuOe = dataArray{:, 23};
S.ACXemuOe1 = dataArray{:, 24};
S.ACXStdErremuOe1 = dataArray{:, 25};
S.ACDriveOe = dataArray{:, 26};
S.ACFrequencyHz = dataArray{:, 27};
S.ACAveragingTimesec = dataArray{:, 28};
S.ACCycles = dataArray{:, 29};
S.ACRange = dataArray{:, 30};
S.ACMeasureType = dataArray{:, 31};
S.ACSignalV = dataArray{:, 32};
S.ACSignalV1 = dataArray{:, 33};
S.ACTrimCoilRatio = dataArray{:, 34};
S.ACTrimCoilPhase = dataArray{:, 35};
S.MinTemperatureK = dataArray{:, 36};
S.MaxTemperatureK = dataArray{:, 37};
S.MinFieldOe = dataArray{:, 38};
S.MaxFieldOe = dataArray{:, 39};
S.Massgrams = dataArray{:, 40};
S.MotorLagdeg = dataArray{:, 41};
S.PressureTorr = dataArray{:, 42};
S.MeasureCount = dataArray{:, 43};
S.MeasurementNumber = dataArray{:, 44};
S.SQUIDStatuscode = dataArray{:, 45};
S.MotorStatuscode = dataArray{:, 46};
S.MeasureStatuscode = dataArray{:, 47};
S.MotorCurrentamps = dataArray{:, 48};
S.MotorTempC = dataArray{:, 49};
S.TempStatuscode = dataArray{:, 50};
S.FieldStatuscode = dataArray{:, 51};
S.ChamberStatuscode = dataArray{:, 52};
S.ChamberTempK = dataArray{:, 53};
S.RedirectionState = dataArray{:, 54};
S.EvercoolStatus = dataArray{:, 55};
S.AverageTempK = dataArray{:, 56};
S.RotationAngledeg = dataArray{:, 57};
S.Rotatorstate = dataArray{:, 58};
S.DCMomentFixedCtremu = dataArray{:, 59};
S.DCMomentErrFixedCtremu = dataArray{:, 60};
S.DCMomentFreeCtremu = dataArray{:, 61};
S.DCMomentErrFreeCtremu = dataArray{:, 62};
S.DCFixedFit = dataArray{:, 63};
S.DCFreeFit = dataArray{:, 64};
S.DCCalculatedCentermm = dataArray{:, 65};
S.DCCalculatedCenterErrmm = dataArray{:, 66};
S.DCScanLengthmm = dataArray{:, 67};
S.DCScanTimes = dataArray{:, 68};
S.DCNumberofPoints = dataArray{:, 69};
S.DCSquidDrift = dataArray{:, 70};
S.DCMinVV = dataArray{:, 71};
S.DCMaxVV = dataArray{:, 72};
S.DCScansperMeasure = dataArray{:, 73};
S.Map01 = dataArray{:, 74};
S.Map02 = dataArray{:, 75};
S.Map03 = dataArray{:, 76};
S.Map04 = dataArray{:, 77};
S.Map05 = dataArray{:, 78};
S.Map06 = dataArray{:, 79};
S.Map07 = dataArray{:, 80};
S.Map08 = dataArray{:, 81};
S.Map09 = dataArray{:, 82};
S.Map10 = dataArray{:, 83};
S.Map11 = dataArray{:, 84};
S.Map12 = dataArray{:, 85};
S.Map13 = dataArray{:, 86};
S.Map14 = dataArray{:, 87};
S.Map15 = dataArray{:, 88};
S.Map16 = dataArray{:, 89};


