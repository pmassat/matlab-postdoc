function [fitresult, gof] = ENS_peak_fit_ICpV_function_4params(hh0, I, hCenter, varargin)
%CREATEFIT(HH067,I67)
%  Create a fit.
%
%  Data for 'ICpV' (Ikeda-Carpenter-pseudo-Voigt) fit:
%      X Input (numeric array): hh0, cut of data along hh0 direction
%      Y Input (numeric array): I, neutrons intensity received by detector, in arb. units
%      hCenter (integer): center of peak, in reciprocal space units 
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 16-Feb-2019 19:01:29


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData(hh0,I);
if nargin>3
    dataExcl = varargin{1};
%     dataExcl = hh0<hCenter-.15 | hh0>hCenter+varargin{1};
else dataExcl = hh0<hCenter-.15 | hh0>hCenter+0.2;
end

% Set up fittype and options.
ft = fittype( 'I*voigtIkedaCarpenter(x,[alpha,gamma,6.6e-3,1,0,0.05,x0])', 'independent', 'x', 'dependent', 'y' );
% ft = fittype( 'I*voigtIkedaCarpenter(x,[gamma,sigma,140,1,0,0.05,x0])', 'independent', 'x', 'dependent', 'y' );
excludedPoints = excludedata( xData, yData, 'Indices', dataExcl );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0 0 -Inf];
opts.StartPoint = [2e5 200 1e-3 -8];% Initial parameter values when holding sigma constant
% opts.StartPoint = [2e5 1e-3 0.01 -8];% Initial parameter values when holding alpha constant
opts.Exclude = excludedPoints;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );


