%% Analysis of capacitance data generated by the capacitance bridge on the ICE Oxford cryostat
cd 'C:\Users\Pierre\Desktop\Postdoc\TmAsO4\TmAsO4_capacitance\TmAsO4-LS342-C1909';
% FullData=ImportMCEinDRmatrix('2018-08-01_MCE_TmVO4-LS5228-DR-HC180731.dat');%
Data = ImportCapICEHe4('2019-09-16_TmAsO4-LS342-Cab1909_02.txt');

%% Capacitance vs time
figure
plot(Data.time_s,Data.C_pF)
xlabel('time (s)'); ylabel('$C$ (pF)');

%% Capacitance vs Temperature
figure
plot(Data.T_K,Data.C_pF)
xlabel('$T$ (K)'); ylabel('$C$ (pF)');

%% Compute temperature derivative of capacitance
% Create table column containing differences of temperature column
diffT = diff(Data.T_K);
Data.diffT = zeros(size(Data.T_K));
Data.diffT(2:end-1) = (diffT(2:end)+diffT(1:end-1))/2;
Data.diffT(1) = diffT(1)/2; Data.diffT(end) = diffT(end)/2;

% Create table column containing differences of time column
difftime = diff(Data.time_s);
Data.difftime = zeros(size(Data.time_s));
Data.difftime(2:end-1) = (difftime(2:end)+difftime(1:end-1))/2;
Data.difftime(1) = difftime(1)/2; Data.difftime(end) = difftime(end)/2;

% Create table column containing differences of capacitance column
diffC = diff(Data.C_pF);
Data.diffC = zeros(size(Data.C_pF));
Data.diffC(2:end-1) = (diffC(2:end)+diffC(1:end-1))/2;
Data.diffC(1) = diffC(1)/2; Data.diffC(end) = diffC(end)/2;

% Compute dT/dtime
Data.dTdtime = Data.diffT./Data.difftime;

% Compute dC/dT
Data.dCdT = Data.diffC./Data.diffT;

%% Separate temperature up- and downsweeps
% Using boolean filter
threshold = 1e-3;
FilterTup = Data.diffT > threshold;% logical array, the elements of which equal 1 when temperature is swept up
FilterTdown = Data.diffT < -threshold;% same when temperature is swept down

%% Plot capacitance data for temperature upsweeps
figure
plot(Data.T_K(FilterTup),Data.C_pF(FilterTup),'.','MarkerSize',12)
xlabel('$T$ (K)'); ylabel('$C$ (pF)');
title('Capacitance vs Temperature swept up');

%% Split up- and downsweeps into individual arrays
dFup = diff(FilterTup);% Array where elements are non-zero only when a new upsweep starts or ends
dFdown = diff(FilterTdown);% Same for downsweep
upStart = find(dFup>0);% dFup=1 when an upsweep starts
upEnd = find(dFup<0);% dFup=-1 when an upsweep ends
dUp = upEnd-upStart;% number of datapoints in each upsweep
upSel1 = upStart(dUp>100); upSel2 = upEnd(dUp>100);% only keep datasets with more than 100 data points
downStart = find(dFdown>0); downEnd = find(dFdown<0); dDown = downEnd-downStart;% Same for downsweeps
downSel1 = downStart(dDown>100); downSel2 = downEnd(dDown>100);% only keep datasets with more than 100 data points
sgm = 1;
for i=1:length(upSel1)
    seqUp = upSel1(i):upSel2(i);
    up(i).T = Data.T_K(seqUp);
    up(i).diffT = Data.diffT(seqUp);
    up(i).C = Data.C_pF(seqUp);
    up(i).dCdT = Data.dCdT(seqUp);
    [up(i).gC,up(i).gdC,~] = gConvolve(Data.C_pF(seqUp),sgm);
    [up(i).gT,up(i).gdT,~] = gConvolve(Data.T_K(seqUp),sgm);
end

for i=1:length(downSel1)
    seqDown = downSel1(i):downSel2(i);
    down(i).T = Data.T_K(seqDown);
    down(i).diffT = Data.diffT(seqDown);
    down(i).C = Data.C_pF(seqDown);
    down(i).dCdT = Data.dCdT(seqDown);
    [down(i).gC,down(i).gdC,~] = gConvolve(Data.C_pF(seqDown),sgm);
    [down(i).gT,down(i).gdT,~] = gConvolve(Data.T_K(seqDown),sgm);
end

%% Plot capacitance data for separate temperature upsweeps
figure; hold on
for i=1:length(up)
plot(up(i).T,up(i).C,'.','MarkerSize',12,'DisplayName',sprintf('%i',i))
end
xlabel('$T$ (K)'); ylabel('$C$ (pF)');
title('Capacitance vs Temperature swept up');
lgd = legend('show'); lgd.Title.String = 'Run \#';

%% Plot capacitance data for separate temperature downsweeps
figure; hold on
for i=1:length(down)
plot(down(i).T,down(i).C,'.','MarkerSize',12,'DisplayName',sprintf('%i',i))
end
xlabel('$T$ (K)'); ylabel('$C$ (pF)');
title('Capacitance vs Temperature swept down');
lgd = legend('show'); lgd.Title.String = 'Run \#';

%% Compare raw and smoothed data
i=1;
Cbounds = [.452 .458];
figure; hold on
plot(up(i).T,up(i).C,'-','MarkerSize',12,'DisplayName','Raw')
plot(up(i).T,up(i).gC,'-','MarkerSize',12,'DisplayName',['Smoothed $\sigma=$' sprintf('%g',sgm)])
xlabel('$T$ (K)'); ylabel('$C$ (pF)');
title('Effect of smoothing');
lgd = legend('show');
ylim(Cbounds);

%% Compare raw and smoothed derivative
dCbounds = [-.02 .02];
figure; hold on
plot(up(i).T,up(i).dCdT,'-','MarkerSize',12,'DisplayName','Raw')
plot(up(i).T,up(i).gdC./up(i).diffT,'-','MarkerSize',12,'DisplayName',['Smoothed $\sigma=$' sprintf('%g',sgm)])
plot(up(i).T,up(i).gdC./up(i).gdT,'-','MarkerSize',12,'DisplayName',['Smoothed $\sigma=$' sprintf('%g',sgm)])
xlabel('$T$ (K)'); ylabel('$dC/dT$ (pF/K)');
title('Effect of smoothing on temperature derivative');
lgd = legend('show');
ylim(dCbounds);

%% Plot smoothed capacitance vs temperature
figure; hold on
for i=1:length(up)
plot(up(i).T,up(i).gC,'.','MarkerSize',12,'DisplayName',sprintf('%i',i))
end
xlabel('$T$ (K)'); ylabel('$C$ (pF)');
title('Smoothed $C$ vs $T$ swept up');
lgd = legend('show'); lgd.Title.String = 'Run \#';
ylim(Cbounds);

%% Plot smoothed capacitance vs temperature
figure; hold on
for i=1:length(down)
plot(down(i).T,down(i).gC,'.','MarkerSize',12,'DisplayName',sprintf('%i',i))
end
xlabel('$T$ (K)'); ylabel('$C$ (pF)');
title('Smoothed $C$ vs $T$ swept down');
lgd = legend('show'); lgd.Title.String = 'Run \#';
ylim(Cbounds);

%% Plot smoothed dC/dT vs temperature
d1Cbounds = [-.02 .02];
figure; hold on
for i=1:length(up)
plot(up(i).T,up(i).gdC./up(i).gdT,'.-','MarkerSize',12,'DisplayName',sprintf('%i',i))
end
xlabel('$T$ (K)'); ylabel('$C$ (pF)');
title('Smoothed $dC/dT$ vs $T$ swept up');
lgd = legend('show'); lgd.Title.String = 'Run \#';
ylim(d1Cbounds);

%% Plot smoothed dC/dT vs temperature
figure; hold on
for i=1:length(down)
plot(down(i).T,down(i).gdC./down(i).gdT,'.-','MarkerSize',12,'DisplayName',sprintf('%i',i))
end
xlabel('$T$ (K)'); ylabel('$C$ (pF)');
title('Smoothed $dC/dT$ vs $T$ swept down');
lgd = legend('show'); lgd.Title.String = 'Run \#';
ylim(d1Cbounds);












